/* This was one of the first projects that i did 
while learning javascript in november 2019.
This script only uses some basic DOM manipulation,
loops and conditionals*/
var a = "";
var b = "";
let result;
var dummyValue = " ";
var operator = "";
let display = document.querySelector("#display");
//Event listeners keyboard and mouse.
window.addEventListener("keydown", (e) => {
  e.preventDefault();
  const buttonKeyCode = document.querySelector(
    `button[data-key="${e.keyCode}"]`
  );
  // selects the key Code of *ALL* possible keyboard keys.
  if (
    display.textContent.split("").some((data) => data == ".") &&
    event.keyCode == 110
  ) {
    // This one avoids the repetition of decimal points (.).
    return;
  }
  if (!buttonKeyCode) {
    // This eliminates undefined items generated by the const buttonKeyCode selector.
    return;
  }
  keyOrButtonPressed(event.keyCode, buttonKeyCode);
});
const allNumberButtons = document.querySelectorAll("button");
allNumberButtons.forEach((buttonNumber) => {
  buttonNumber.addEventListener("click", (e) => {
    const buttonKeyCode = buttonNumber.dataset.key;
    if (
      display.textContent.split("").some((data) => data == ".") &&
      buttonKeyCode == 110
    ) {
      //Same as line 48
      event.target.style.cursor = "not-allowed";
      return;
    }
    if (!buttonKeyCode) {
      //same as line 51
      return;
    }
    keyOrButtonPressed(buttonKeyCode, e.target);
  });
});
//Button linked functions (either pressed on keyboard o clicked on screen). Nothing remarkable in here!
function backSpace() {
  if (display.textContent == "error" || display.textContent == dummyValue + a) {
    return;
  } //This line (whitout the dummy[this prevents the user to delete the result unless they press CE]) is repited through all the script its function is to stop the user input when there is an error in the calculator display
  else if (display.textContent.length > 1) {
    let eraseThis = display.textContent.split("").slice(0, -1).join("");
    display.textContent = eraseThis;
  } else {
    display.textContent = 0;
  }
}
function clearEverything() {
  a = "";
  b = "";
  operator = "";
  display.textContent = 0;
}
function add() {
  let sum = a + b;
  return parseFloat(sum);
}
function substract() {
  let sub = a - b;
  sub.length;
  return parseFloat(sub);
}
function multiply() {
  let mult = a * b;
  return parseFloat(mult);
}
function divide() {
  let div;
  div = a / b;
  if (div == Infinity) {
    return "error";
  } else {
    return parseFloat(div);
  }
}
function number(keyOrButton) {
  if (display.textContent == "error") {
    return;
  } else if (a == "") {
    if (display.textContent == 0) {
      display.textContent = keyOrButton.textContent;
    } else if (display.textContent.length < 9) {
      display.textContent += keyOrButton.textContent;
    }
  } else if (b == "") {
    if (display.textContent == dummyValue + a) {
      display.textContent = keyOrButton.textContent;
    } else if (display.textContent.length < 9) {
      display.textContent += keyOrButton.textContent;
    }
  } else if (b != "") {
    b = "";
    display.textContent = keyOrButton.textContent;
  }
}
function operate() {
  if (operator == "add") {
    return add();
  } else if (operator == "multiply") {
    return multiply();
  } else if (operator == "substract") {
    return substract();
  } else if (operator == "divide") {
    return divide();
  }
}
//Logical functions. Take the previously defined functions but only execute them if certain criteria are 'true'.
function operationWithSignificativeFigures(operator) {
  //This functions use the 'operate' function and returns a result depending of such result's length.
  result = operate(operator).toString();
  if (result.length > 9) {
    result = parseFloat(result);
    result = result.toExponential(7);
  } else {
    result = parseFloat(result);
  }
  return result;
}
function fixOperator(keyOrButton) {
  //Fix operator and prevent some bugs.
  if (display.textContent == "error") {
    //Stops the user to input values if the calculator displays 'error'.
    return;
  } else if (operator == "" && a == "") {
    a = parseFloat(display.textContent);
    display.textContent = dummyValue + display.textContent;
    operator = keyOrButton.id;
    return operator;
  } else if (operator != "" && display.textContent == dummyValue + a) {
    //in case you change operators i.e you wanted to choose '-' but pushed '+' instead.
    operator = keyOrButton.id;
    return operator;
  } else if (a != "" && operator != "") {
    //Execute operation and reset b value. Useful if you want to de sequential operations (i.e 2+5*6-6 etc)
    b = parseFloat(display.textContent);
    operationWithSignificativeFigures(operator);
    a = result;
    significativeFiguresError(result);
    operator = keyOrButton.id;
    b = "";
    return operator;
  } else {
    /*  else if (a!='' && operator==''){                                                //I don't remember why i left this in here, anyway i commented it out!
        operator= keyOrButton.id;
        return operator;
    } */
    display.textContent = "error";
  }
}
function significativeFiguresError(result) {
  // Prevents values whit more than 9 digits even if they are in scientific notation.
  if (result.toString.length > 9 || isNaN(result)) {
    display.textContent = "error";
    return;
  } else {
    display.textContent = dummyValue + a;
    return;
  }
}
function enter() {
  //The enter button function: lets do repetitive operations with the same operator and operates(i.e  by defining 8*8 presing enter multiple times returns 8*8*8*8..etc)
  if (display.textContent == "error") {
    return;
  } else if (a != "" && b != "" && operator != "") {
    operationWithSignificativeFigures(operator);
    a = result;
    significativeFiguresError(result);
    return a;
  } else if (operator != "" && display.textContent == dummyValue + a) {
    operator = keyOrButton.id;
    return operator;
  } else if (a != "" && b == "" && operator != "") {
    b = parseFloat(display.textContent);
    operationWithSignificativeFigures(operator);
    a = result;
    significativeFiguresError(result);
    return a;
  }
}
function keyOrButtonPressed(code, buttonKeyCode) {
  //This function links buttons on the calculator AND keyboard keys with their corresponding function. Is the main function used in the event listeners.
  if ((code >= 96 && code <= 105) || code == 110) {
    number(buttonKeyCode);
  } else if (code == 106 || code == 107 || code == 109 || code == 111) {
    return fixOperator(buttonKeyCode);
  } else if (code == 46) {
    clearEverything();
  } else if (code == 13) {
    enter();
  } else {
    backSpace();
  }
}
